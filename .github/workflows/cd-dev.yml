name: Dalkak dev CD

on:
  push:
    tags:
      - test-v*
  workflow_dispatch:

jobs:
  deploy-test-server:
    if: startsWith(github.ref, 'refs/tags/test-v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.5'
          cache: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract version
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t dalkak:${{ steps.extract_version.outputs.VERSION }} -f server/Dockerfile.dev server
          docker tag dalkak:${{ steps.extract_version.outputs.VERSION }} ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_TEST_SERVER_REPOSITORY }}:${{ steps.extract_version.outputs.VERSION }}
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_TEST_SERVER_REPOSITORY }}:${{ steps.extract_version.outputs.VERSION }}

      # - name: Update Lambda Function Container Image
      #   if: success()
      #   run: |
      #     FUNCTION_NAME=${{ secrets.AWS_LAMBDA_TEST_SERVER_FUNC_NAME }}
      #     NEW_IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_TEST_SERVER_REPOSITORY }}:${{ steps.extract_version.outputs.VERSION }}"

      #     aws lambda update-function-code --function-name $FUNCTION_NAME --image-uri $NEW_IMAGE_URI > /dev/null

      
  notify-slack:
    needs: deploy-test-server
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,workflow
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: 'Dev CD Process   ${{ job.status }}   for ${{ github.repository }}',
              }]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
